{
  "contractName": "Election",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "fundsTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "voteComplete",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "age",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "agenda",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "candidatesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_age",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_agenda",
          "type": "string"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getBalanceVC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_candidateId\",\"type\":\"uint256\"}],\"name\":\"voteComplete\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_age\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_agenda\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"age\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"agenda\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidatesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceVC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_candidateId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Election.sol\":\"Election\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a635cec58fb4141a16cfd408f1a21ac944c335a3beaba541c35d2e95c04536f\",\"dweb:/ipfs/QmXWcz73UenN1ji8jiWMbzxHjjfLbNQwLVKTEB5zNFE34K\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccbd79e8d556aa7011babb0e5d1e55a966add74853e7ba0274ff184bd96ef002\",\"dweb:/ipfs/QmV28ozNRUFDiDUMvCwcFmLTQPG6nfvgeKr4cmbHWoegtH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"project:/contracts/Election.sol\":{\"keccak256\":\"0x48b0e6123b2515233d8c0495cde7fe70bfdcb864d129f784cba1d1832f128b32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29714ea35c34231e61b18dc5e459d6c59bd4f0f05642d4b534fb1688fdb256f5\",\"dweb:/ipfs/QmWCzxzVfwnWXT8Gp3RJt48sL2Cq6kajMjmxyCL4r4buuD\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f566f74652d436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f564300000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000115565b508060049080519060200190620000af92919062000115565b506012600560006101000a81548160ff021916908360ff160217905550505033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001cb565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200014d576000855562000199565b82601f106200016857805160ff191683800117855562000199565b8280016001018555821562000199579182015b82811115620001985782518255916020019190600101906200017b565b5b509050620001a89190620001ac565b5090565b5b80821115620001c7576000816000905550600101620001ad565b5090565b6120d080620001db6000396000f3fe6080604052600436106101145760003560e01c806339509351116100a0578063a3ec138d11610064578063a3ec138d146108e3578063a457c2d714610951578063a9059cbb146109c2578063be99970514610a33578063dd62ed3e14610a6157610114565b8063395093511461071157806370a08231146107825780638009f767146107e75780638da5cb5b1461081257806395d89b411461085357610114565b806323b872dd116100e757806323b872dd146102805780632593c632146103115780632d35a8a214610514578063313ce5671461053f5780633477ee2e1461056d57610114565b80630121b93f1461011957806306fdde0314610154578063095ea7b3146101e457806318160ddd14610255575b600080fd5b34801561012557600080fd5b506101526004803603602081101561013c57600080fd5b8101908080359060200190929190505050610ae6565b005b34801561016057600080fd5b50610169610d10565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a957808201518184015260208101905061018e565b50505050905090810190601f1680156101d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f057600080fd5b5061023d6004803603604081101561020757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610db2565b60405180821515815260200191505060405180910390f35b34801561026157600080fd5b5061026a610dd0565b6040518082815260200191505060405180910390f35b34801561028c57600080fd5b506102f9600480360360608110156102a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dda565b60405180821515815260200191505060405180910390f35b34801561031d57600080fd5b506105126004803603608081101561033457600080fd5b810190808035906020019064010000000081111561035157600080fd5b82018360208201111561036357600080fd5b8035906020019184600183028401116401000000008311171561038557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001906401000000008111156103f557600080fd5b82018360208201111561040757600080fd5b8035906020019184600183028401116401000000008311171561042957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460018302840111640100000000831117156104c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610eb3565b005b34801561052057600080fd5b50610529611065565b6040518082815260200191505060405180910390f35b34801561054b57600080fd5b5061055461106b565b604051808260ff16815260200191505060405180910390f35b34801561057957600080fd5b506105a66004803603602081101561059057600080fd5b8101908080359060200190929190505050611082565b60405180878152602001806020018660ff1681526020018060200180602001858152602001848103845289818151815260200191508051906020019080838360005b838110156106035780820151818401526020810190506105e8565b50505050905090810190601f1680156106305780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b8381101561066957808201518184015260208101905061064e565b50505050905090810190601f1680156106965780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156106cf5780820151818401526020810190506106b4565b50505050905090810190601f1680156106fc5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561071d57600080fd5b5061076a6004803603604081101561073457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611293565b60405180821515815260200191505060405180910390f35b34801561078e57600080fd5b506107d1600480360360208110156107a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611346565b6040518082815260200191505060405180910390f35b3480156107f357600080fd5b506107fc61138e565b6040518082815260200191505060405180910390f35b34801561081e57600080fd5b506108276113d8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561085f57600080fd5b506108686113fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108a857808201518184015260208101905061088d565b50505050905090810190601f1680156108d55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108ef57600080fd5b506109326004803603602081101561090657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114a0565b6040518083815260200182151581526020019250505060405180910390f35b34801561095d57600080fd5b506109aa6004803603604081101561097457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114d1565b60405180821515815260200191505060405180910390f35b3480156109ce57600080fd5b50610a1b600480360360408110156109e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061159e565b60405180821515815260200191505060405180910390f35b610a5f60048036036020811015610a4957600080fd5b81019080803590602001909291905050506115bc565b005b348015610a6d57600080fd5b50610ad060048036036040811015610a8457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611664565b6040518082815260200191505060405180910390f35b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610ba9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43757272656e7420766f7465722068617320616c726561647920766f7465642181525060200191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180611f886035913960400191505060405180910390fd5b600081118015610c5657506008548111155b610c5f57600080fd5b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506006600082815260200190815260200160002060050160008154809291906001019190505550807f53a49a3efbc264bce9396a0aac01295eb995ae89b56991e847deecf9f379622a60405160405180910390a250565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610da85780601f10610d7d57610100808354040283529160200191610da8565b820191906000526020600020905b815481529060010190602001808311610d8b57829003601f168201915b5050505050905090565b6000610dc6610dbf6116eb565b84846116f3565b6001905092915050565b6000600254905090565b6000610de78484846118ea565b610ea884610df36116eb565b610ea38560405180606001604052806028815260200161200560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610e596116eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab9092919063ffffffff16565b6116f3565b600190509392505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4f6e6c79206f776e65722063616e204164642043616e6469646174657300000081525060200191505060405180910390fd5b6008600081548092919060010191905055506040518060c0016040528060085481526020018581526020018460ff1681526020018281526020018381526020016000815250600660006008548152602001908152602001600020600082015181600001556020820151816001019080519060200190610ff6929190611eb9565b5060408201518160020160006101000a81548160ff021916908360ff1602179055506060820151816003019080519060200190611034929190611eb9565b506080820151816004019080519060200190611051929190611eb9565b5060a0820151816005015590505050505050565b60085481565b6000600560009054906101000a900460ff16905090565b6006602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111345780601f1061110957610100808354040283529160200191611134565b820191906000526020600020905b81548152906001019060200180831161111757829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111e55780601f106111ba576101008083540402835291602001916111e5565b820191906000526020600020905b8154815290600101906020018083116111c857829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112835780601f1061125857610100808354040283529160200191611283565b820191906000526020600020905b81548152906001019060200180831161126657829003601f168201915b5050505050908060050154905086565b600061133c6112a06116eb565b8461133785600160006112b16116eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b6116f3565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114965780601f1061146b57610100808354040283529160200191611496565b820191906000526020600020905b81548152906001019060200180831161147957829003601f168201915b5050505050905090565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b60006115946114de6116eb565b8461158f8560405180606001604052806025815260200161207660259139600160006115086116eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab9092919063ffffffff16565b6116f3565b6001905092915050565b60006115b26115ab6116eb565b84846118ea565b6001905092915050565b6115d5336115c861106b565b60ff16600a0a8302611ced565b6115dd61106b565b60ff16600a0a8102600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550807fba11c03036c3c2cea0a1fbdfdfe211d0d3d7f8a81ef6b69b220629a00c6fdb6760405160405180910390a250565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611779576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806120526024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611fbd6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061202d6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611f656023913960400191505060405180910390fd5b611a01838383611eb4565b611a6c81604051806060016040528060268152602001611fdf602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611aff816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611c58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c1d578082015181840152602081019050611c02565b50505050905090810190601f168015611c4a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611d9c60008383611eb4565b611db181600254611c6590919063ffffffff16565b600281905550611e08816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611eef5760008555611f36565b82601f10611f0857805160ff1916838001178555611f36565b82800160010185558215611f36579182015b82811115611f35578251825591602001919060010190611f1a565b5b509050611f439190611f47565b5090565b5b80821115611f60576000816000905550600101611f48565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737343757272656e7420766f74657220686173206e6f2066756e64732c20706c656173652066756e64207468652063616d706169676e2145524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122090c3daac9046fb843e4e6810410ffb46b909fdf007c576c552031fd2f5dc083a64736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c806339509351116100a0578063a3ec138d11610064578063a3ec138d146108e3578063a457c2d714610951578063a9059cbb146109c2578063be99970514610a33578063dd62ed3e14610a6157610114565b8063395093511461071157806370a08231146107825780638009f767146107e75780638da5cb5b1461081257806395d89b411461085357610114565b806323b872dd116100e757806323b872dd146102805780632593c632146103115780632d35a8a214610514578063313ce5671461053f5780633477ee2e1461056d57610114565b80630121b93f1461011957806306fdde0314610154578063095ea7b3146101e457806318160ddd14610255575b600080fd5b34801561012557600080fd5b506101526004803603602081101561013c57600080fd5b8101908080359060200190929190505050610ae6565b005b34801561016057600080fd5b50610169610d10565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a957808201518184015260208101905061018e565b50505050905090810190601f1680156101d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f057600080fd5b5061023d6004803603604081101561020757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610db2565b60405180821515815260200191505060405180910390f35b34801561026157600080fd5b5061026a610dd0565b6040518082815260200191505060405180910390f35b34801561028c57600080fd5b506102f9600480360360608110156102a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dda565b60405180821515815260200191505060405180910390f35b34801561031d57600080fd5b506105126004803603608081101561033457600080fd5b810190808035906020019064010000000081111561035157600080fd5b82018360208201111561036357600080fd5b8035906020019184600183028401116401000000008311171561038557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001906401000000008111156103f557600080fd5b82018360208201111561040757600080fd5b8035906020019184600183028401116401000000008311171561042957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460018302840111640100000000831117156104c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610eb3565b005b34801561052057600080fd5b50610529611065565b6040518082815260200191505060405180910390f35b34801561054b57600080fd5b5061055461106b565b604051808260ff16815260200191505060405180910390f35b34801561057957600080fd5b506105a66004803603602081101561059057600080fd5b8101908080359060200190929190505050611082565b60405180878152602001806020018660ff1681526020018060200180602001858152602001848103845289818151815260200191508051906020019080838360005b838110156106035780820151818401526020810190506105e8565b50505050905090810190601f1680156106305780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b8381101561066957808201518184015260208101905061064e565b50505050905090810190601f1680156106965780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b838110156106cf5780820151818401526020810190506106b4565b50505050905090810190601f1680156106fc5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561071d57600080fd5b5061076a6004803603604081101561073457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611293565b60405180821515815260200191505060405180910390f35b34801561078e57600080fd5b506107d1600480360360208110156107a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611346565b6040518082815260200191505060405180910390f35b3480156107f357600080fd5b506107fc61138e565b6040518082815260200191505060405180910390f35b34801561081e57600080fd5b506108276113d8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561085f57600080fd5b506108686113fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108a857808201518184015260208101905061088d565b50505050905090810190601f1680156108d55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108ef57600080fd5b506109326004803603602081101561090657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114a0565b6040518083815260200182151581526020019250505060405180910390f35b34801561095d57600080fd5b506109aa6004803603604081101561097457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114d1565b60405180821515815260200191505060405180910390f35b3480156109ce57600080fd5b50610a1b600480360360408110156109e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061159e565b60405180821515815260200191505060405180910390f35b610a5f60048036036020811015610a4957600080fd5b81019080803590602001909291905050506115bc565b005b348015610a6d57600080fd5b50610ad060048036036040811015610a8457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611664565b6040518082815260200191505060405180910390f35b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610ba9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43757272656e7420766f7465722068617320616c726561647920766f7465642181525060200191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180611f886035913960400191505060405180910390fd5b600081118015610c5657506008548111155b610c5f57600080fd5b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506006600082815260200190815260200160002060050160008154809291906001019190505550807f53a49a3efbc264bce9396a0aac01295eb995ae89b56991e847deecf9f379622a60405160405180910390a250565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610da85780601f10610d7d57610100808354040283529160200191610da8565b820191906000526020600020905b815481529060010190602001808311610d8b57829003601f168201915b5050505050905090565b6000610dc6610dbf6116eb565b84846116f3565b6001905092915050565b6000600254905090565b6000610de78484846118ea565b610ea884610df36116eb565b610ea38560405180606001604052806028815260200161200560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610e596116eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab9092919063ffffffff16565b6116f3565b600190509392505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4f6e6c79206f776e65722063616e204164642043616e6469646174657300000081525060200191505060405180910390fd5b6008600081548092919060010191905055506040518060c0016040528060085481526020018581526020018460ff1681526020018281526020018381526020016000815250600660006008548152602001908152602001600020600082015181600001556020820151816001019080519060200190610ff6929190611eb9565b5060408201518160020160006101000a81548160ff021916908360ff1602179055506060820151816003019080519060200190611034929190611eb9565b506080820151816004019080519060200190611051929190611eb9565b5060a0820151816005015590505050505050565b60085481565b6000600560009054906101000a900460ff16905090565b6006602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111345780601f1061110957610100808354040283529160200191611134565b820191906000526020600020905b81548152906001019060200180831161111757829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111e55780601f106111ba576101008083540402835291602001916111e5565b820191906000526020600020905b8154815290600101906020018083116111c857829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112835780601f1061125857610100808354040283529160200191611283565b820191906000526020600020905b81548152906001019060200180831161126657829003601f168201915b5050505050908060050154905086565b600061133c6112a06116eb565b8461133785600160006112b16116eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b6116f3565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114965780601f1061146b57610100808354040283529160200191611496565b820191906000526020600020905b81548152906001019060200180831161147957829003601f168201915b5050505050905090565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b60006115946114de6116eb565b8461158f8560405180606001604052806025815260200161207660259139600160006115086116eb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab9092919063ffffffff16565b6116f3565b6001905092915050565b60006115b26115ab6116eb565b84846118ea565b6001905092915050565b6115d5336115c861106b565b60ff16600a0a8302611ced565b6115dd61106b565b60ff16600a0a8102600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550807fba11c03036c3c2cea0a1fbdfdfe211d0d3d7f8a81ef6b69b220629a00c6fdb6760405160405180910390a250565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611779576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806120526024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611fbd6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061202d6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119f6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611f656023913960400191505060405180910390fd5b611a01838383611eb4565b611a6c81604051806060016040528060268152602001611fdf602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611aff816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611c58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c1d578082015181840152602081019050611c02565b50505050905090810190601f168015611c4a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611d9c60008383611eb4565b611db181600254611c6590919063ffffffff16565b600281905550611e08816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611eef5760008555611f36565b82601f10611f0857805160ff1916838001178555611f36565b82800160010185558215611f36579182015b82811115611f35578251825591602001919060010190611f1a565b5b509050611f439190611f47565b5090565b5b80821115611f60576000816000905550600101611f48565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737343757272656e7420766f74657220686173206e6f2066756e64732c20706c656173652066756e64207468652063616d706169676e2145524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122090c3daac9046fb843e4e6810410ffb46b909fdf007c576c552031fd2f5dc083a64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "164:2296:4:-:0;;;796:73;;;;;;;;;;1950:138:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2025:5;2017;:13;;;;;;;;;;;;:::i;:::-;;2050:7;2040;:17;;;;;;;;;;;;:::i;:::-;;2079:2;2067:9;;:14;;;;;;;;;;;;;;;;;;1950:138;;852:10:4::1;844:5;;:18;;;;;;;;;;;;;;;;;;164:2296:::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "164:2296:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2153:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4229:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3220:106;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4862:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;875:450:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;736:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3071:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;610:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5574:215:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3384:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1554:98:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;769:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2355:93:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:266:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3712:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1331:217:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3942:149:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1892:566:4;2002:6;:18;2009:10;2002:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2001:28;1993:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2111:1;2084:6;:18;2091:10;2084:18;;;;;;;;;;;;;;;:24;;;:28;2076:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:1;2226:12;:16;:51;;;;;2262:15;;2246:12;:31;;2226:51;2218:60;;;;;;2319:4;2289:6;:18;2296:10;2289:18;;;;;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;2333:10;:24;2344:12;2333:24;;;;;;;;;;;:34;;;:37;;;;;;;;;;;;;2438:12;2425:26;;;;;;;;;;1892:566;:::o;2153:89:1:-;2198:13;2230:5;2223:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:89;:::o;4229:166::-;4312:4;4328:39;4337:12;:10;:12::i;:::-;4351:7;4360:6;4328:8;:39::i;:::-;4384:4;4377:11;;4229:166;;;;:::o;3220:106::-;3281:7;3307:12;;3300:19;;3220:106;:::o;4862:317::-;4968:4;4984:36;4994:6;5002:9;5013:6;4984:9;:36::i;:::-;5030:121;5039:6;5047:12;:10;:12::i;:::-;5061:89;5099:6;5061:89;;;;;;;;;;;;;;;;;:11;:19;5073:6;5061:19;;;;;;;;;;;;;;;:33;5081:12;:10;:12::i;:::-;5061:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5030:8;:121::i;:::-;5168:4;5161:11;;4862:317;;;;;:::o;875:450:4:-;1016:5;;;;;;;;;;;1002:19;;:10;:19;;;994:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:15;;:18;;;;;;;;;;;;;1132:186;;;;;;;;1160:15;;1132:186;;;;1195:5;1132:186;;;;1219:4;1132:186;;;;;;1274:7;1132:186;;;;1245:7;1132:186;;;;1306:1;1132:186;;;1102:10;:27;1113:15;;1102:27;;;;;;;;;;;:216;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;875:450;;;;:::o;736:27::-;;;;:::o;3071:89:1:-;3120:5;3144:9;;;;;;;;;;;3137:16;;3071:89;:::o;610:44:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5574:215:1:-;5662:4;5678:83;5687:12;:10;:12::i;:::-;5701:7;5710:50;5749:10;5710:11;:25;5722:12;:10;:12::i;:::-;5710:25;;;;;;;;;;;;;;;:34;5736:7;5710:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5678:8;:83::i;:::-;5778:4;5771:11;;5574:215;;;;:::o;3384:125::-;3458:7;3484:9;:18;3494:7;3484:18;;;;;;;;;;;;;;;;3477:25;;3384:125;;;:::o;1554:98:4:-;1599:4;1621:6;:18;1628:10;1621:18;;;;;;;;;;;;;;;:24;;;1614:31;;1554:98;:::o;769:20::-;;;;;;;;;;;;;:::o;2355:93:1:-;2402:13;2434:7;2427:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:93;:::o;660:39:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6276:266:1:-;6369:4;6385:129;6394:12;:10;:12::i;:::-;6408:7;6417:96;6456:15;6417:96;;;;;;;;;;;;;;;;;:11;:25;6429:12;:10;:12::i;:::-;6417:25;;;;;;;;;;;;;;;:34;6443:7;6417:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6385:8;:129::i;:::-;6531:4;6524:11;;6276:266;;;;:::o;3712:172::-;3798:4;3814:42;3824:12;:10;:12::i;:::-;3838:9;3849:6;3814:9;:42::i;:::-;3873:4;3866:11;;3712:172;;;;:::o;1331:217:4:-;1388:47;1394:10;1423;:8;:10::i;:::-;1417:16;;:2;:16;1406:7;:28;1388:5;:47::i;:::-;1490:10;:8;:10::i;:::-;1484:16;;:2;:16;1473:7;:28;1445:6;:18;1452:10;1445:18;;;;;;;;;;;;;;;:24;;;:56;;;;;;;;;;;1533:7;1516:25;;;;;;;;;;1331:217;:::o;3942:149:1:-;4031:7;4057:11;:18;4069:5;4057:18;;;;;;;;;;;;;;;:27;4076:7;4057:27;;;;;;;;;;;;;;;;4050:34;;3942:149;;;;:::o;598:104:3:-;651:15;685:10;678:17;;598:104;:::o;9340:340:1:-;9458:1;9441:19;;:5;:19;;;;9433:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9538:1;9519:21;;:7;:21;;;;9511:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9620:6;9590:11;:18;9602:5;9590:18;;;;;;;;;;;;;;;:27;9609:7;9590:27;;;;;;;;;;;;;;;:36;;;;9657:7;9641:32;;9650:5;9641:32;;;9666:6;9641:32;;;;;;;;;;;;;;;;;;9340:340;;;:::o;7016:530::-;7139:1;7121:20;;:6;:20;;;;7113:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7222:1;7201:23;;:9;:23;;;;7193:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7275:47;7296:6;7304:9;7315:6;7275:20;:47::i;:::-;7353:71;7375:6;7353:71;;;;;;;;;;;;;;;;;:9;:17;7363:6;7353:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7333:9;:17;7343:6;7333:17;;;;;;;;;;;;;;;:91;;;;7457:32;7482:6;7457:9;:20;7467:9;7457:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7434:9;:20;7444:9;7434:20;;;;;;;;;;;;;;;:55;;;;7521:9;7504:35;;7513:6;7504:35;;;7532:6;7504:35;;;;;;;;;;;;;;;;;;7016:530;;;:::o;5424:163:0:-;5510:7;5542:1;5537;:6;;5545:12;5529:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5579:1;5575;:5;5568:12;;5424:163;;;;;:::o;2682:175::-;2740:7;2759:9;2775:1;2771;:5;2759:17;;2799:1;2794;:6;;2786:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2842:8;;;2682:175;;;;:::o;7817:370:1:-;7919:1;7900:21;;:7;:21;;;;7892:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7968:49;7997:1;8001:7;8010:6;7968:20;:49::i;:::-;8043:24;8060:6;8043:12;;:16;;:24;;;;:::i;:::-;8028:12;:39;;;;8098:30;8121:6;8098:9;:18;8108:7;8098:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8077:9;:18;8087:7;8077:18;;;;;;;;;;;;;;;:51;;;;8164:7;8143:37;;8160:1;8143:37;;;8173:6;8143:37;;;;;;;;;;;;;;;;;;7817:370;;:::o;10686:92::-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n// pragma solidity ^0.8.20;\npragma solidity >=0.4.22 <0.9.0;\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n\ncontract Election is ERC20 {\n    // Model a Candidate\n    struct Candidate {\n        uint id;\n        string name;\n        uint8 age;\n        string agenda;\n        string gender;\n        uint voteCount;\n    }\n\n    struct Voter {\n        uint funds; \n        bool hasVoted;\n    }\n\n    event voteComplete (\n        uint indexed _candidateId\n    );\n    event fundsTransferred (\n        uint indexed _amount\n    );\n\n    // Read/write candidates\n    mapping(uint => Candidate) public candidates;\n    mapping(address => Voter) public voters;\n\n    // Store Candidates Count\n    uint public candidatesCount;\n    address public owner;\n\n    constructor() ERC20(\"Vote-Coin\", \"VC\"){\n        owner = msg.sender;\n    }\n\n    function addCandidate (string memory _name, uint8 _age, string memory _gender, string memory _agenda) public {\n        require(msg.sender == owner, \"Only owner can Add Candidates\");\n        candidatesCount ++;\n        \n        candidates[candidatesCount] = Candidate({\n            id: candidatesCount,\n            name: _name,\n            age: _age,\n            gender: _gender,\n            agenda: _agenda,\n            voteCount: 0\n        });\n    }\n\n    function addFunds (uint _amount) public payable{\n        _mint(msg.sender, _amount * (10 ** decimals()));\n        voters[msg.sender].funds += _amount * (10 ** decimals());\n        emit fundsTransferred(_amount);\n    }\n\n    function getBalanceVC() public view returns (uint){\n        return voters[msg.sender].funds;\n    }\n\n    // function withdraw () public payable{\n\n    //     _burn(msg.sender, msg.value * (10 ** decimals()));\n    //     voters[msg.sender].funds -= msg.value * (10 ** decimals());\n\n    //     emit fundsTransferred(msg.value);\n    // }\n\n    function vote (uint _candidateId) public {\n        // require that they haven't voted before\n        require(!voters[msg.sender].hasVoted, \"Current voter has already voted!\");\n        require(voters[msg.sender].funds > 0, \"Current voter has no funds, please fund the campaign!\");\n\n        // require a valid candidate\n        require(_candidateId > 0 && _candidateId <= candidatesCount);\n\n        voters[msg.sender].hasVoted = true;\n        candidates[_candidateId].voteCount ++;\n        \n        // trigger voted event\n        emit voteComplete(_candidateId);\n    }\n}",
  "sourcePath": "/Users/ritvik/Projects/Blockchain/Vote-System/contracts/Election.sol",
  "ast": {
    "absolutePath": "project:/contracts/Election.sol",
    "exportedSymbols": {
      "ERC20": [
        857
      ],
      "Election": [
        1155
      ]
    },
    "id": 1156,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 960,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:32:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 962,
        "nodeType": "ImportDirective",
        "scope": 1156,
        "sourceUnit": 858,
        "src": "93:68:4",
        "symbolAliases": [
          {
            "foreign": {
              "id": 961,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "101:5:4",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 963,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 857,
              "src": "185:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$857",
                "typeString": "contract ERC20"
              }
            },
            "id": 964,
            "nodeType": "InheritanceSpecifier",
            "src": "185:5:4"
          }
        ],
        "contractDependencies": [
          857,
          935,
          958
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1155,
        "linearizedBaseContracts": [
          1155,
          857,
          935,
          958
        ],
        "name": "Election",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Election.Candidate",
            "id": 977,
            "members": [
              {
                "constant": false,
                "id": 966,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 977,
                "src": "249:7:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 965,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 968,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 977,
                "src": "266:11:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 967,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "266:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 970,
                "mutability": "mutable",
                "name": "age",
                "nodeType": "VariableDeclaration",
                "scope": 977,
                "src": "287:9:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 969,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 972,
                "mutability": "mutable",
                "name": "agenda",
                "nodeType": "VariableDeclaration",
                "scope": 977,
                "src": "306:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 971,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 974,
                "mutability": "mutable",
                "name": "gender",
                "nodeType": "VariableDeclaration",
                "scope": 977,
                "src": "329:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 973,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "329:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 976,
                "mutability": "mutable",
                "name": "voteCount",
                "nodeType": "VariableDeclaration",
                "scope": 977,
                "src": "352:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 975,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nodeType": "StructDefinition",
            "scope": 1155,
            "src": "222:151:4",
            "visibility": "public"
          },
          {
            "canonicalName": "Election.Voter",
            "id": 982,
            "members": [
              {
                "constant": false,
                "id": 979,
                "mutability": "mutable",
                "name": "funds",
                "nodeType": "VariableDeclaration",
                "scope": 982,
                "src": "402:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 978,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 981,
                "mutability": "mutable",
                "name": "hasVoted",
                "nodeType": "VariableDeclaration",
                "scope": 982,
                "src": "423:13:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 980,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nodeType": "StructDefinition",
            "scope": 1155,
            "src": "379:64:4",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 986,
            "name": "voteComplete",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "478:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "468:41:4"
            },
            "src": "449:61:4"
          },
          {
            "anonymous": false,
            "id": 990,
            "name": "fundsTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "548:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:36:4"
            },
            "src": "515:60:4"
          },
          {
            "constant": false,
            "functionSelector": "3477ee2e",
            "id": 994,
            "mutability": "mutable",
            "name": "candidates",
            "nodeType": "VariableDeclaration",
            "scope": 1155,
            "src": "610:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$977_storage_$",
              "typeString": "mapping(uint256 => struct Election.Candidate)"
            },
            "typeName": {
              "id": 993,
              "keyType": {
                "id": 991,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "618:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "610:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$977_storage_$",
                "typeString": "mapping(uint256 => struct Election.Candidate)"
              },
              "valueType": {
                "id": 992,
                "name": "Candidate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 977,
                "src": "626:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$977_storage_ptr",
                  "typeString": "struct Election.Candidate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 998,
            "mutability": "mutable",
            "name": "voters",
            "nodeType": "VariableDeclaration",
            "scope": 1155,
            "src": "660:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
              "typeString": "mapping(address => struct Election.Voter)"
            },
            "typeName": {
              "id": 997,
              "keyType": {
                "id": 995,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "660:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
                "typeString": "mapping(address => struct Election.Voter)"
              },
              "valueType": {
                "id": 996,
                "name": "Voter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 982,
                "src": "679:5:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$982_storage_ptr",
                  "typeString": "struct Election.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d35a8a2",
            "id": 1000,
            "mutability": "mutable",
            "name": "candidatesCount",
            "nodeType": "VariableDeclaration",
            "scope": 1155,
            "src": "736:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 999,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "736:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1002,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 1155,
            "src": "769:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1001,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "769:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1014,
              "nodeType": "Block",
              "src": "834:35:4",
              "statements": [
                {
                  "expression": {
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1009,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "844:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1010,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "852:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "852:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "844:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "844:18:4"
                }
              ]
            },
            "id": 1015,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "566f74652d436f696e",
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "816:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_71356443528307727013a6e1f5527aeed8f797f1594fe07c17cbf3e468df14d8",
                      "typeString": "literal_string \"Vote-Coin\""
                    },
                    "value": "Vote-Coin"
                  },
                  {
                    "hexValue": "5643",
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "829:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ee97ac454d713d43e36d7a2cd3d26679649818751543beb5fab74ab65135265f",
                      "typeString": "literal_string \"VC\""
                    },
                    "value": "VC"
                  }
                ],
                "id": 1007,
                "modifierName": {
                  "id": 1004,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 857,
                  "src": "810:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$857_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:2:4"
            },
            "returnParameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:0:4"
            },
            "scope": 1155,
            "src": "796:73:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "984:341:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1027,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1002:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1002:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1029,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "1016:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1002:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e204164642043616e64696461746573",
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6ad36ce4d46342190ce99f538f654615a1e2a55f2d0514946a08f07e0337a46",
                          "typeString": "literal_string \"Only owner can Add Candidates\""
                        },
                        "value": "Only owner can Add Candidates"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6ad36ce4d46342190ce99f538f654615a1e2a55f2d0514946a08f07e0337a46",
                          "typeString": "literal_string \"Only owner can Add Candidates\""
                        }
                      ],
                      "id": 1026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "994:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "994:61:4"
                },
                {
                  "expression": {
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1065:18:4",
                    "subExpression": {
                      "id": 1034,
                      "name": "candidatesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "1065:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1036,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:18:4"
                },
                {
                  "expression": {
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1037,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "1102:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$977_storage_$",
                          "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"
                        }
                      },
                      "id": 1039,
                      "indexExpression": {
                        "id": 1038,
                        "name": "candidatesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1113:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1102:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$977_storage",
                        "typeString": "struct Election.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1041,
                          "name": "candidatesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "1160:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1042,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1017,
                          "src": "1195:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1043,
                          "name": "_age",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "1219:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 1044,
                          "name": "_gender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1021,
                          "src": "1245:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1045,
                          "name": "_agenda",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "1274:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1306:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1040,
                        "name": "Candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "1132:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Candidate_$977_storage_ptr_$",
                          "typeString": "type(struct Election.Candidate storage pointer)"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "id",
                        "name",
                        "age",
                        "gender",
                        "agenda",
                        "voteCount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1132:186:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$977_memory_ptr",
                        "typeString": "struct Election.Candidate memory"
                      }
                    },
                    "src": "1102:216:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$977_storage",
                      "typeString": "struct Election.Candidate storage ref"
                    }
                  },
                  "id": 1049,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:216:4"
                }
              ]
            },
            "functionSelector": "2593c632",
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCandidate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1017,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "898:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "_age",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "919:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "_gender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "931:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "_agenda",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "954:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:79:4"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:4"
            },
            "scope": 1155,
            "src": "875:450:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1086,
              "nodeType": "Block",
              "src": "1378:170:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1394:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1394:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1059,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "1406:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1417:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1061,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 433,
                                  "src": "1423:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                    "typeString": "function () view returns (uint8)"
                                  }
                                },
                                "id": 1062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1423:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "1417:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1064,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1416:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1406:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1056,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 733,
                      "src": "1388:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:47:4"
                },
                {
                  "expression": {
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1068,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "1445:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
                            "typeString": "mapping(address => struct Election.Voter storage ref)"
                          }
                        },
                        "id": 1071,
                        "indexExpression": {
                          "expression": {
                            "id": 1069,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1452:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1452:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1445:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$982_storage",
                          "typeString": "struct Election.Voter storage ref"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "funds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "1445:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1073,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "1473:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1484:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1075,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 433,
                                "src": "1490:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 1076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1490:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1484:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1078,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1483:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1473:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1445:56:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:56:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1083,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "1533:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1082,
                      "name": "fundsTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "1516:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:25:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1085,
                  "nodeType": "EmitStatement",
                  "src": "1511:30:4"
                }
              ]
            },
            "functionSelector": "be999705",
            "id": 1087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "1350:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1349:14:4"
            },
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:4"
            },
            "scope": 1155,
            "src": "1331:217:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "1604:48:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1092,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "1621:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
                          "typeString": "mapping(address => struct Election.Voter storage ref)"
                        }
                      },
                      "id": 1095,
                      "indexExpression": {
                        "expression": {
                          "id": 1093,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1628:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1628:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1621:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$982_storage",
                        "typeString": "struct Election.Voter storage ref"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "funds",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 979,
                    "src": "1621:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1091,
                  "id": 1097,
                  "nodeType": "Return",
                  "src": "1614:31:4"
                }
              ]
            },
            "functionSelector": "8009f767",
            "id": 1099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceVC",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1575:2:4"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "1599:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1598:6:4"
            },
            "scope": 1155,
            "src": "1554:98:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "1933:525:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2001:28:4",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1105,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "2002:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
                                "typeString": "mapping(address => struct Election.Voter storage ref)"
                              }
                            },
                            "id": 1108,
                            "indexExpression": {
                              "expression": {
                                "id": 1106,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2009:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2009:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2002:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$982_storage",
                              "typeString": "struct Election.Voter storage ref"
                            }
                          },
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasVoted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 981,
                          "src": "2002:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e7420766f7465722068617320616c726561647920766f74656421",
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2031:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a30517d529a43c0ad0b72d3cd1b3251aff4a6dae57de8aab800a6daedd360d26",
                          "typeString": "literal_string \"Current voter has already voted!\""
                        },
                        "value": "Current voter has already voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a30517d529a43c0ad0b72d3cd1b3251aff4a6dae57de8aab800a6daedd360d26",
                          "typeString": "literal_string \"Current voter has already voted!\""
                        }
                      ],
                      "id": 1104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1993:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:73:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1113,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:73:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1115,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "2084:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
                                "typeString": "mapping(address => struct Election.Voter storage ref)"
                              }
                            },
                            "id": 1118,
                            "indexExpression": {
                              "expression": {
                                "id": 1116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2091:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2091:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2084:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$982_storage",
                              "typeString": "struct Election.Voter storage ref"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "funds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 979,
                          "src": "2084:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2111:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2084:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e7420766f74657220686173206e6f2066756e64732c20706c656173652066756e64207468652063616d706169676e21",
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2114:55:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b0a103bacdf4eb52aa5c675786c2e13c8e51d5195bd2fe6c558aadd7a6ace1a",
                          "typeString": "literal_string \"Current voter has no funds, please fund the campaign!\""
                        },
                        "value": "Current voter has no funds, please fund the campaign!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b0a103bacdf4eb52aa5c675786c2e13c8e51d5195bd2fe6c558aadd7a6ace1a",
                          "typeString": "literal_string \"Current voter has no funds, please fund the campaign!\""
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2076:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:94:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:94:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1126,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1101,
                            "src": "2226:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2241:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2226:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1129,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1101,
                            "src": "2246:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1130,
                            "name": "candidatesCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "2262:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2246:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2226:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2218:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:60:4"
                },
                {
                  "expression": {
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1135,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "2289:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$982_storage_$",
                            "typeString": "mapping(address => struct Election.Voter storage ref)"
                          }
                        },
                        "id": 1138,
                        "indexExpression": {
                          "expression": {
                            "id": 1136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2296:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2296:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2289:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$982_storage",
                          "typeString": "struct Election.Voter storage ref"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hasVoted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 981,
                      "src": "2289:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2319:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2289:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:34:4"
                },
                {
                  "expression": {
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2333:37:4",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1143,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 994,
                          "src": "2333:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$977_storage_$",
                            "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"
                          }
                        },
                        "id": 1145,
                        "indexExpression": {
                          "id": 1144,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1101,
                          "src": "2344:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2333:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$977_storage",
                          "typeString": "struct Election.Candidate storage ref"
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 976,
                      "src": "2333:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:37:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1150,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "2438:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1149,
                      "name": "voteComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 986,
                      "src": "2425:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "EmitStatement",
                  "src": "2420:31:4"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 1154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "1907:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1906:19:4"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1933:0:4"
            },
            "scope": 1155,
            "src": "1892:566:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1156,
        "src": "164:2296:4"
      }
    ],
    "src": "60:2400:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Election.sol",
      "exportedSymbols": {
        "ERC20": [
          857
        ],
        "Election": [
          1155
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 960,
        "name": "PragmaDirective",
        "src": "60:32:4"
      },
      {
        "attributes": {
          "SourceUnit": 858,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 1156,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "ERC20"
                },
                "id": 961,
                "name": "Identifier",
                "src": "101:5:4"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 962,
        "name": "ImportDirective",
        "src": "93:68:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            857,
            935,
            958
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1155,
            857,
            935,
            958
          ],
          "name": "Election",
          "scope": 1156
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 857,
                  "type": "contract ERC20"
                },
                "id": 963,
                "name": "UserDefinedTypeName",
                "src": "185:5:4"
              }
            ],
            "id": 964,
            "name": "InheritanceSpecifier",
            "src": "185:5:4"
          },
          {
            "attributes": {
              "canonicalName": "Election.Candidate",
              "name": "Candidate",
              "scope": 1155,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "scope": 977,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 965,
                    "name": "ElementaryTypeName",
                    "src": "249:4:4"
                  }
                ],
                "id": 966,
                "name": "VariableDeclaration",
                "src": "249:7:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "name",
                  "scope": 977,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 967,
                    "name": "ElementaryTypeName",
                    "src": "266:6:4"
                  }
                ],
                "id": 968,
                "name": "VariableDeclaration",
                "src": "266:11:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "age",
                  "scope": 977,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint8",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 969,
                    "name": "ElementaryTypeName",
                    "src": "287:5:4"
                  }
                ],
                "id": 970,
                "name": "VariableDeclaration",
                "src": "287:9:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "agenda",
                  "scope": 977,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 971,
                    "name": "ElementaryTypeName",
                    "src": "306:6:4"
                  }
                ],
                "id": 972,
                "name": "VariableDeclaration",
                "src": "306:13:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "gender",
                  "scope": 977,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 973,
                    "name": "ElementaryTypeName",
                    "src": "329:6:4"
                  }
                ],
                "id": 974,
                "name": "VariableDeclaration",
                "src": "329:13:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "voteCount",
                  "scope": 977,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 975,
                    "name": "ElementaryTypeName",
                    "src": "352:4:4"
                  }
                ],
                "id": 976,
                "name": "VariableDeclaration",
                "src": "352:14:4"
              }
            ],
            "id": 977,
            "name": "StructDefinition",
            "src": "222:151:4"
          },
          {
            "attributes": {
              "canonicalName": "Election.Voter",
              "name": "Voter",
              "scope": 1155,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "funds",
                  "scope": 982,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 978,
                    "name": "ElementaryTypeName",
                    "src": "402:4:4"
                  }
                ],
                "id": 979,
                "name": "VariableDeclaration",
                "src": "402:10:4"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "hasVoted",
                  "scope": 982,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 980,
                    "name": "ElementaryTypeName",
                    "src": "423:4:4"
                  }
                ],
                "id": 981,
                "name": "VariableDeclaration",
                "src": "423:13:4"
              }
            ],
            "id": 982,
            "name": "StructDefinition",
            "src": "379:64:4"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "voteComplete"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_candidateId",
                      "scope": 986,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 983,
                        "name": "ElementaryTypeName",
                        "src": "478:4:4"
                      }
                    ],
                    "id": 984,
                    "name": "VariableDeclaration",
                    "src": "478:25:4"
                  }
                ],
                "id": 985,
                "name": "ParameterList",
                "src": "468:41:4"
              }
            ],
            "id": 986,
            "name": "EventDefinition",
            "src": "449:61:4"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "fundsTransferred"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 990,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 987,
                        "name": "ElementaryTypeName",
                        "src": "548:4:4"
                      }
                    ],
                    "id": 988,
                    "name": "VariableDeclaration",
                    "src": "548:20:4"
                  }
                ],
                "id": 989,
                "name": "ParameterList",
                "src": "538:36:4"
              }
            ],
            "id": 990,
            "name": "EventDefinition",
            "src": "515:60:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "3477ee2e",
              "mutability": "mutable",
              "name": "candidates",
              "scope": 1155,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct Election.Candidate)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct Election.Candidate)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 991,
                    "name": "ElementaryTypeName",
                    "src": "618:4:4"
                  },
                  {
                    "attributes": {
                      "name": "Candidate",
                      "referencedDeclaration": 977,
                      "type": "struct Election.Candidate"
                    },
                    "id": 992,
                    "name": "UserDefinedTypeName",
                    "src": "626:9:4"
                  }
                ],
                "id": 993,
                "name": "Mapping",
                "src": "610:26:4"
              }
            ],
            "id": 994,
            "name": "VariableDeclaration",
            "src": "610:44:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "a3ec138d",
              "mutability": "mutable",
              "name": "voters",
              "scope": 1155,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Election.Voter)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Election.Voter)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 995,
                    "name": "ElementaryTypeName",
                    "src": "668:7:4"
                  },
                  {
                    "attributes": {
                      "name": "Voter",
                      "referencedDeclaration": 982,
                      "type": "struct Election.Voter"
                    },
                    "id": 996,
                    "name": "UserDefinedTypeName",
                    "src": "679:5:4"
                  }
                ],
                "id": 997,
                "name": "Mapping",
                "src": "660:25:4"
              }
            ],
            "id": 998,
            "name": "VariableDeclaration",
            "src": "660:39:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "2d35a8a2",
              "mutability": "mutable",
              "name": "candidatesCount",
              "scope": 1155,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 999,
                "name": "ElementaryTypeName",
                "src": "736:4:4"
              }
            ],
            "id": 1000,
            "name": "VariableDeclaration",
            "src": "736:27:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "scope": 1155,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1001,
                "name": "ElementaryTypeName",
                "src": "769:7:4"
              }
            ],
            "id": 1002,
            "name": "VariableDeclaration",
            "src": "769:20:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1155,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1003,
                "name": "ParameterList",
                "src": "807:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1008,
                "name": "ParameterList",
                "src": "834:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 857,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 1004,
                    "name": "Identifier",
                    "src": "810:5:4"
                  },
                  {
                    "attributes": {
                      "hexvalue": "566f74652d436f696e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Vote-Coin\"",
                      "value": "Vote-Coin"
                    },
                    "id": 1005,
                    "name": "Literal",
                    "src": "816:11:4"
                  },
                  {
                    "attributes": {
                      "hexvalue": "5643",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"VC\"",
                      "value": "VC"
                    },
                    "id": 1006,
                    "name": "Literal",
                    "src": "829:4:4"
                  }
                ],
                "id": 1007,
                "name": "ModifierInvocation",
                "src": "810:24:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1002,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 1009,
                            "name": "Identifier",
                            "src": "844:5:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1010,
                                "name": "Identifier",
                                "src": "852:3:4"
                              }
                            ],
                            "id": 1011,
                            "name": "MemberAccess",
                            "src": "852:10:4"
                          }
                        ],
                        "id": 1012,
                        "name": "Assignment",
                        "src": "844:18:4"
                      }
                    ],
                    "id": 1013,
                    "name": "ExpressionStatement",
                    "src": "844:18:4"
                  }
                ],
                "id": 1014,
                "name": "Block",
                "src": "834:35:4"
              }
            ],
            "id": 1015,
            "name": "FunctionDefinition",
            "src": "796:73:4"
          },
          {
            "attributes": {
              "functionSelector": "2593c632",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addCandidate",
              "scope": 1155,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_name",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1016,
                        "name": "ElementaryTypeName",
                        "src": "898:6:4"
                      }
                    ],
                    "id": 1017,
                    "name": "VariableDeclaration",
                    "src": "898:19:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_age",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 1018,
                        "name": "ElementaryTypeName",
                        "src": "919:5:4"
                      }
                    ],
                    "id": 1019,
                    "name": "VariableDeclaration",
                    "src": "919:10:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_gender",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1020,
                        "name": "ElementaryTypeName",
                        "src": "931:6:4"
                      }
                    ],
                    "id": 1021,
                    "name": "VariableDeclaration",
                    "src": "931:21:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_agenda",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1022,
                        "name": "ElementaryTypeName",
                        "src": "954:6:4"
                      }
                    ],
                    "id": 1023,
                    "name": "VariableDeclaration",
                    "src": "954:21:4"
                  }
                ],
                "id": 1024,
                "name": "ParameterList",
                "src": "897:79:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1025,
                "name": "ParameterList",
                "src": "984:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c6ad36ce4d46342190ce99f538f654615a1e2a55f2d0514946a08f07e0337a46",
                                  "typeString": "literal_string \"Only owner can Add Candidates\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1026,
                            "name": "Identifier",
                            "src": "994:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1027,
                                    "name": "Identifier",
                                    "src": "1002:3:4"
                                  }
                                ],
                                "id": 1028,
                                "name": "MemberAccess",
                                "src": "1002:10:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1002,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 1029,
                                "name": "Identifier",
                                "src": "1016:5:4"
                              }
                            ],
                            "id": 1030,
                            "name": "BinaryOperation",
                            "src": "1002:19:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c79206f776e65722063616e204164642043616e64696461746573",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only owner can Add Candidates\"",
                              "value": "Only owner can Add Candidates"
                            },
                            "id": 1031,
                            "name": "Literal",
                            "src": "1023:31:4"
                          }
                        ],
                        "id": 1032,
                        "name": "FunctionCall",
                        "src": "994:61:4"
                      }
                    ],
                    "id": 1033,
                    "name": "ExpressionStatement",
                    "src": "994:61:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1000,
                              "type": "uint256",
                              "value": "candidatesCount"
                            },
                            "id": 1034,
                            "name": "Identifier",
                            "src": "1065:15:4"
                          }
                        ],
                        "id": 1035,
                        "name": "UnaryOperation",
                        "src": "1065:18:4"
                      }
                    ],
                    "id": 1036,
                    "name": "ExpressionStatement",
                    "src": "1065:18:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Election.Candidate storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Election.Candidate storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 994,
                                  "type": "mapping(uint256 => struct Election.Candidate storage ref)",
                                  "value": "candidates"
                                },
                                "id": 1037,
                                "name": "Identifier",
                                "src": "1102:10:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1000,
                                  "type": "uint256",
                                  "value": "candidatesCount"
                                },
                                "id": 1038,
                                "name": "Identifier",
                                "src": "1113:15:4"
                              }
                            ],
                            "id": 1039,
                            "name": "IndexAccess",
                            "src": "1102:27:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "id",
                                "name",
                                "age",
                                "gender",
                                "agenda",
                                "voteCount"
                              ],
                              "tryCall": false,
                              "type": "struct Election.Candidate memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 977,
                                  "type": "type(struct Election.Candidate storage pointer)",
                                  "value": "Candidate"
                                },
                                "id": 1040,
                                "name": "Identifier",
                                "src": "1132:9:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1000,
                                  "type": "uint256",
                                  "value": "candidatesCount"
                                },
                                "id": 1041,
                                "name": "Identifier",
                                "src": "1160:15:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1017,
                                  "type": "string memory",
                                  "value": "_name"
                                },
                                "id": 1042,
                                "name": "Identifier",
                                "src": "1195:5:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1019,
                                  "type": "uint8",
                                  "value": "_age"
                                },
                                "id": 1043,
                                "name": "Identifier",
                                "src": "1219:4:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1021,
                                  "type": "string memory",
                                  "value": "_gender"
                                },
                                "id": 1044,
                                "name": "Identifier",
                                "src": "1245:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1023,
                                  "type": "string memory",
                                  "value": "_agenda"
                                },
                                "id": 1045,
                                "name": "Identifier",
                                "src": "1274:7:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1046,
                                "name": "Literal",
                                "src": "1306:1:4"
                              }
                            ],
                            "id": 1047,
                            "name": "FunctionCall",
                            "src": "1132:186:4"
                          }
                        ],
                        "id": 1048,
                        "name": "Assignment",
                        "src": "1102:216:4"
                      }
                    ],
                    "id": 1049,
                    "name": "ExpressionStatement",
                    "src": "1102:216:4"
                  }
                ],
                "id": 1050,
                "name": "Block",
                "src": "984:341:4"
              }
            ],
            "id": 1051,
            "name": "FunctionDefinition",
            "src": "875:450:4"
          },
          {
            "attributes": {
              "functionSelector": "be999705",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addFunds",
              "scope": 1155,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 1087,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1052,
                        "name": "ElementaryTypeName",
                        "src": "1350:4:4"
                      }
                    ],
                    "id": 1053,
                    "name": "VariableDeclaration",
                    "src": "1350:12:4"
                  }
                ],
                "id": 1054,
                "name": "ParameterList",
                "src": "1349:14:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1055,
                "name": "ParameterList",
                "src": "1378:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 733,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1056,
                            "name": "Identifier",
                            "src": "1388:5:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1057,
                                "name": "Identifier",
                                "src": "1394:3:4"
                              }
                            ],
                            "id": 1058,
                            "name": "MemberAccess",
                            "src": "1394:10:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1053,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 1059,
                                "name": "Identifier",
                                "src": "1406:7:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 1060,
                                        "name": "Literal",
                                        "src": "1417:2:4"
                                      },
                                      {
                                        "attributes": {
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint8",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 433,
                                              "type": "function () view returns (uint8)",
                                              "value": "decimals"
                                            },
                                            "id": 1061,
                                            "name": "Identifier",
                                            "src": "1423:8:4"
                                          }
                                        ],
                                        "id": 1062,
                                        "name": "FunctionCall",
                                        "src": "1423:10:4"
                                      }
                                    ],
                                    "id": 1063,
                                    "name": "BinaryOperation",
                                    "src": "1417:16:4"
                                  }
                                ],
                                "id": 1064,
                                "name": "TupleExpression",
                                "src": "1416:18:4"
                              }
                            ],
                            "id": 1065,
                            "name": "BinaryOperation",
                            "src": "1406:28:4"
                          }
                        ],
                        "id": 1066,
                        "name": "FunctionCall",
                        "src": "1388:47:4"
                      }
                    ],
                    "id": 1067,
                    "name": "ExpressionStatement",
                    "src": "1388:47:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "funds",
                              "referencedDeclaration": 979,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Election.Voter storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 998,
                                      "type": "mapping(address => struct Election.Voter storage ref)",
                                      "value": "voters"
                                    },
                                    "id": 1068,
                                    "name": "Identifier",
                                    "src": "1445:6:4"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 1069,
                                        "name": "Identifier",
                                        "src": "1452:3:4"
                                      }
                                    ],
                                    "id": 1070,
                                    "name": "MemberAccess",
                                    "src": "1452:10:4"
                                  }
                                ],
                                "id": 1071,
                                "name": "IndexAccess",
                                "src": "1445:18:4"
                              }
                            ],
                            "id": 1072,
                            "name": "MemberAccess",
                            "src": "1445:24:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1053,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 1073,
                                "name": "Identifier",
                                "src": "1473:7:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 1074,
                                        "name": "Literal",
                                        "src": "1484:2:4"
                                      },
                                      {
                                        "attributes": {
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint8",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 433,
                                              "type": "function () view returns (uint8)",
                                              "value": "decimals"
                                            },
                                            "id": 1075,
                                            "name": "Identifier",
                                            "src": "1490:8:4"
                                          }
                                        ],
                                        "id": 1076,
                                        "name": "FunctionCall",
                                        "src": "1490:10:4"
                                      }
                                    ],
                                    "id": 1077,
                                    "name": "BinaryOperation",
                                    "src": "1484:16:4"
                                  }
                                ],
                                "id": 1078,
                                "name": "TupleExpression",
                                "src": "1483:18:4"
                              }
                            ],
                            "id": 1079,
                            "name": "BinaryOperation",
                            "src": "1473:28:4"
                          }
                        ],
                        "id": 1080,
                        "name": "Assignment",
                        "src": "1445:56:4"
                      }
                    ],
                    "id": 1081,
                    "name": "ExpressionStatement",
                    "src": "1445:56:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 990,
                              "type": "function (uint256)",
                              "value": "fundsTransferred"
                            },
                            "id": 1082,
                            "name": "Identifier",
                            "src": "1516:16:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1053,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 1083,
                            "name": "Identifier",
                            "src": "1533:7:4"
                          }
                        ],
                        "id": 1084,
                        "name": "FunctionCall",
                        "src": "1516:25:4"
                      }
                    ],
                    "id": 1085,
                    "name": "EmitStatement",
                    "src": "1511:30:4"
                  }
                ],
                "id": 1086,
                "name": "Block",
                "src": "1378:170:4"
              }
            ],
            "id": 1087,
            "name": "FunctionDefinition",
            "src": "1331:217:4"
          },
          {
            "attributes": {
              "functionSelector": "8009f767",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getBalanceVC",
              "scope": 1155,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1088,
                "name": "ParameterList",
                "src": "1575:2:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1099,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1089,
                        "name": "ElementaryTypeName",
                        "src": "1599:4:4"
                      }
                    ],
                    "id": 1090,
                    "name": "VariableDeclaration",
                    "src": "1599:4:4"
                  }
                ],
                "id": 1091,
                "name": "ParameterList",
                "src": "1598:6:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1091
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "funds",
                          "referencedDeclaration": 979,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct Election.Voter storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 998,
                                  "type": "mapping(address => struct Election.Voter storage ref)",
                                  "value": "voters"
                                },
                                "id": 1092,
                                "name": "Identifier",
                                "src": "1621:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1093,
                                    "name": "Identifier",
                                    "src": "1628:3:4"
                                  }
                                ],
                                "id": 1094,
                                "name": "MemberAccess",
                                "src": "1628:10:4"
                              }
                            ],
                            "id": 1095,
                            "name": "IndexAccess",
                            "src": "1621:18:4"
                          }
                        ],
                        "id": 1096,
                        "name": "MemberAccess",
                        "src": "1621:24:4"
                      }
                    ],
                    "id": 1097,
                    "name": "Return",
                    "src": "1614:31:4"
                  }
                ],
                "id": 1098,
                "name": "Block",
                "src": "1604:48:4"
              }
            ],
            "id": 1099,
            "name": "FunctionDefinition",
            "src": "1554:98:4"
          },
          {
            "attributes": {
              "functionSelector": "0121b93f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "vote",
              "scope": 1155,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_candidateId",
                      "scope": 1154,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1100,
                        "name": "ElementaryTypeName",
                        "src": "1907:4:4"
                      }
                    ],
                    "id": 1101,
                    "name": "VariableDeclaration",
                    "src": "1907:17:4"
                  }
                ],
                "id": 1102,
                "name": "ParameterList",
                "src": "1906:19:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1103,
                "name": "ParameterList",
                "src": "1933:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a30517d529a43c0ad0b72d3cd1b3251aff4a6dae57de8aab800a6daedd360d26",
                                  "typeString": "literal_string \"Current voter has already voted!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1104,
                            "name": "Identifier",
                            "src": "1993:7:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "hasVoted",
                                  "referencedDeclaration": 981,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Election.Voter storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 998,
                                          "type": "mapping(address => struct Election.Voter storage ref)",
                                          "value": "voters"
                                        },
                                        "id": 1105,
                                        "name": "Identifier",
                                        "src": "2002:6:4"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 1106,
                                            "name": "Identifier",
                                            "src": "2009:3:4"
                                          }
                                        ],
                                        "id": 1107,
                                        "name": "MemberAccess",
                                        "src": "2009:10:4"
                                      }
                                    ],
                                    "id": 1108,
                                    "name": "IndexAccess",
                                    "src": "2002:18:4"
                                  }
                                ],
                                "id": 1109,
                                "name": "MemberAccess",
                                "src": "2002:27:4"
                              }
                            ],
                            "id": 1110,
                            "name": "UnaryOperation",
                            "src": "2001:28:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "43757272656e7420766f7465722068617320616c726561647920766f74656421",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Current voter has already voted!\"",
                              "value": "Current voter has already voted!"
                            },
                            "id": 1111,
                            "name": "Literal",
                            "src": "2031:34:4"
                          }
                        ],
                        "id": 1112,
                        "name": "FunctionCall",
                        "src": "1993:73:4"
                      }
                    ],
                    "id": 1113,
                    "name": "ExpressionStatement",
                    "src": "1993:73:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1b0a103bacdf4eb52aa5c675786c2e13c8e51d5195bd2fe6c558aadd7a6ace1a",
                                  "typeString": "literal_string \"Current voter has no funds, please fund the campaign!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1114,
                            "name": "Identifier",
                            "src": "2076:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "funds",
                                  "referencedDeclaration": 979,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Election.Voter storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 998,
                                          "type": "mapping(address => struct Election.Voter storage ref)",
                                          "value": "voters"
                                        },
                                        "id": 1115,
                                        "name": "Identifier",
                                        "src": "2084:6:4"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 1116,
                                            "name": "Identifier",
                                            "src": "2091:3:4"
                                          }
                                        ],
                                        "id": 1117,
                                        "name": "MemberAccess",
                                        "src": "2091:10:4"
                                      }
                                    ],
                                    "id": 1118,
                                    "name": "IndexAccess",
                                    "src": "2084:18:4"
                                  }
                                ],
                                "id": 1119,
                                "name": "MemberAccess",
                                "src": "2084:24:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1120,
                                "name": "Literal",
                                "src": "2111:1:4"
                              }
                            ],
                            "id": 1121,
                            "name": "BinaryOperation",
                            "src": "2084:28:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "43757272656e7420766f74657220686173206e6f2066756e64732c20706c656173652066756e64207468652063616d706169676e21",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Current voter has no funds, please fund the campaign!\"",
                              "value": "Current voter has no funds, please fund the campaign!"
                            },
                            "id": 1122,
                            "name": "Literal",
                            "src": "2114:55:4"
                          }
                        ],
                        "id": 1123,
                        "name": "FunctionCall",
                        "src": "2076:94:4"
                      }
                    ],
                    "id": 1124,
                    "name": "ExpressionStatement",
                    "src": "2076:94:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1125,
                            "name": "Identifier",
                            "src": "2218:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1101,
                                      "type": "uint256",
                                      "value": "_candidateId"
                                    },
                                    "id": 1126,
                                    "name": "Identifier",
                                    "src": "2226:12:4"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1127,
                                    "name": "Literal",
                                    "src": "2241:1:4"
                                  }
                                ],
                                "id": 1128,
                                "name": "BinaryOperation",
                                "src": "2226:16:4"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1101,
                                      "type": "uint256",
                                      "value": "_candidateId"
                                    },
                                    "id": 1129,
                                    "name": "Identifier",
                                    "src": "2246:12:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1000,
                                      "type": "uint256",
                                      "value": "candidatesCount"
                                    },
                                    "id": 1130,
                                    "name": "Identifier",
                                    "src": "2262:15:4"
                                  }
                                ],
                                "id": 1131,
                                "name": "BinaryOperation",
                                "src": "2246:31:4"
                              }
                            ],
                            "id": 1132,
                            "name": "BinaryOperation",
                            "src": "2226:51:4"
                          }
                        ],
                        "id": 1133,
                        "name": "FunctionCall",
                        "src": "2218:60:4"
                      }
                    ],
                    "id": 1134,
                    "name": "ExpressionStatement",
                    "src": "2218:60:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "hasVoted",
                              "referencedDeclaration": 981,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Election.Voter storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 998,
                                      "type": "mapping(address => struct Election.Voter storage ref)",
                                      "value": "voters"
                                    },
                                    "id": 1135,
                                    "name": "Identifier",
                                    "src": "2289:6:4"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 1136,
                                        "name": "Identifier",
                                        "src": "2296:3:4"
                                      }
                                    ],
                                    "id": 1137,
                                    "name": "MemberAccess",
                                    "src": "2296:10:4"
                                  }
                                ],
                                "id": 1138,
                                "name": "IndexAccess",
                                "src": "2289:18:4"
                              }
                            ],
                            "id": 1139,
                            "name": "MemberAccess",
                            "src": "2289:27:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 1140,
                            "name": "Literal",
                            "src": "2319:4:4"
                          }
                        ],
                        "id": 1141,
                        "name": "Assignment",
                        "src": "2289:34:4"
                      }
                    ],
                    "id": 1142,
                    "name": "ExpressionStatement",
                    "src": "2289:34:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "voteCount",
                              "referencedDeclaration": 976,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Election.Candidate storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 994,
                                      "type": "mapping(uint256 => struct Election.Candidate storage ref)",
                                      "value": "candidates"
                                    },
                                    "id": 1143,
                                    "name": "Identifier",
                                    "src": "2333:10:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1101,
                                      "type": "uint256",
                                      "value": "_candidateId"
                                    },
                                    "id": 1144,
                                    "name": "Identifier",
                                    "src": "2344:12:4"
                                  }
                                ],
                                "id": 1145,
                                "name": "IndexAccess",
                                "src": "2333:24:4"
                              }
                            ],
                            "id": 1146,
                            "name": "MemberAccess",
                            "src": "2333:34:4"
                          }
                        ],
                        "id": 1147,
                        "name": "UnaryOperation",
                        "src": "2333:37:4"
                      }
                    ],
                    "id": 1148,
                    "name": "ExpressionStatement",
                    "src": "2333:37:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 986,
                              "type": "function (uint256)",
                              "value": "voteComplete"
                            },
                            "id": 1149,
                            "name": "Identifier",
                            "src": "2425:12:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1101,
                              "type": "uint256",
                              "value": "_candidateId"
                            },
                            "id": 1150,
                            "name": "Identifier",
                            "src": "2438:12:4"
                          }
                        ],
                        "id": 1151,
                        "name": "FunctionCall",
                        "src": "2425:26:4"
                      }
                    ],
                    "id": 1152,
                    "name": "EmitStatement",
                    "src": "2420:31:4"
                  }
                ],
                "id": 1153,
                "name": "Block",
                "src": "1933:525:4"
              }
            ],
            "id": 1154,
            "name": "FunctionDefinition",
            "src": "1892:566:4"
          }
        ],
        "id": 1155,
        "name": "ContractDefinition",
        "src": "164:2296:4"
      }
    ],
    "id": 1156,
    "name": "SourceUnit",
    "src": "60:2400:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa0E304758109AB9Ecc1F36607586FCc69075d98F",
      "transactionHash": "0x88ea9ce7d4ef2e12bebf3ead98dc3638859d7d57164ae1c000084838331deb69"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-11-27T08:03:02.375Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}